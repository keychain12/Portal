spring:
  datasource:
    url: jdbc:mysql://my-db.chy0kuwimcw9.ap-northeast-2.rds.amazonaws.com/collabtool?useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: admin
    password: 2468086d



  app:
    base-url: http://localhost:3000

  presence:
    threshold:
      online: 30000  # 30초
      idle: 300000   # 5분

      # ✅ kafka 설정을 spring 아래로 이동
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: default-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # ▼▼▼▼▼ 이 부분이 수정되었습니다 ▼▼▼▼▼
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        # 실제 역직렬화를 담당할 클래스를 여기에 지정합니다.
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: hyoung88ha@gmail.com
    password: hdtwytpntoxvqenm
    protocol: smtp
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  feign:
    client:
      config:
        default:
          connect-timeout: 5000
          read-timeout: 5000
  data:
    redis:
      host: localhost
      port: 6379
      lettuce:
        pool:
          max-active: 8   # 동시에 사용할 수 있는 최대 커넥션 수
          max-idle: 8     # 커넥션 풀에서 관리하는 최대 유휴 커넥션 수
          min-idle: 2     # 최소한으로 유지할 유휴 커넥션 수
          max-wait: 100ms # 커넥션을 얻기 위해 대기하는 최대 시간


cloud:
  aws:
    credentials:
      access-key: AKIAWCYX76GS5OY7HZMB
      secret-key: 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
    s3:
      bucket: bucket1msa
    region:
      static: ap-northeast-2
    stack:
      auto: false



servlet:
  multipart:
    max-file-size: 10MB
    max-request-size: 10MB



# ✅ topic 같은 커스텀 속성은 그대로 밖에 둡니다.
kafka:
  topic:
    workspace: workspace.created

server:
  port: 8082

logging:
  level:
    org.hibernate.SQL: debug
